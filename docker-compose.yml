version: "3.1"
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_LEADER_REBALNCE_ENABLE: true

  springrest:
    image: springrest
    environment:
      - KAFKA_IP_PORT=kafka:29092
      - kafka_topic=offers
      - partitions_count=10
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    build:
      context: "./springrest/"
      dockerfile: Dockerfile

  notifications:
    image: notifications
    environment:
      - KAFKA_IP_PORT=kafka:29092
      - kafka_topic=offers
    depends_on:
      - kafka
    build:
      context: "./notifications/"
      dockerfile: Dockerfile

networks:
  kafka_network:
    name: kafka_docker_example_net
    
  